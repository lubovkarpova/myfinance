"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
"""
import sys
import os

def test_env_variables():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    from dotenv import load_dotenv
    load_dotenv()
    
    errors = []
    
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not telegram_token:
        errors.append("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚úÖ TELEGRAM_BOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    openai_key = os.getenv('OPENAI_API_KEY')
    if not openai_key:
        errors.append("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚úÖ OPENAI_API_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    credentials_file = os.getenv('GOOGLE_CREDENTIALS_FILE', 'my-finance-475615-72e35dbf9d52.json')
    if not os.path.exists(credentials_file):
        errors.append(f"‚ùå –§–∞–π–ª credentials –Ω–µ –Ω–∞–π–¥–µ–Ω: {credentials_file}")
    else:
        print(f"‚úÖ –§–∞–π–ª credentials –Ω–∞–π–¥–µ–Ω: {credentials_file}")
    
    return errors


def test_google_sheets():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets...")
    
    try:
        from google_sheets import GoogleSheetsManager
        import config
        
        manager = GoogleSheetsManager(
            config.GOOGLE_CREDENTIALS_FILE,
            config.SPREADSHEET_NAME
        )
        
        if manager.connect():
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets")
            url = manager.get_spreadsheet_url()
            print(f"üìã –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: {url}")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Google Sheets: {e}")
        return False


def test_openai():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API...")
    
    try:
        from openai_categorizer import TransactionCategorizer
        import config
        
        categorizer = TransactionCategorizer(config.OPENAI_API_KEY)
        
        # –ü—Ä–æ–±—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        test_text = "–ö—É–ø–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã –∑–∞ 500 —Ä—É–±–ª–µ–π"
        result = categorizer.parse_transaction(test_text)
        
        print("‚úÖ OpenAI API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"üìù –¢–µ—Å—Ç: '{test_text}'")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å OpenAI: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 50)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_errors = test_env_variables()
    
    if env_errors:
        print("\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for error in env_errors:
            print(f"  {error}")
        print("\nüí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env_example.txt")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets
    sheets_ok = test_google_sheets()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI
    openai_ok = test_openai()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    if sheets_ok and openai_ok:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python bot.py")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏.")
        print("‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    print("=" * 50)


if __name__ == '__main__':
    main()

