"""
–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤
"""
import logging
from datetime import datetime
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes
)

import config
from google_sheets import GoogleSheetsManager
from openai_categorizer import TransactionCategorizer

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
sheets_manager = None
categorizer = None


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    welcome_message = f"""
–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã

–Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã –∏ –¥–æ—Ö–æ–¥—ã –≤ —Å–≤–æ–±–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
‚Ä¢ "–ö—É–ø–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã –∑–∞ 1500 —Ä—É–±–ª–µ–π"
‚Ä¢ "–ü–æ—Ç—Ä–∞—Ç–∏–ª 300 –Ω–∞ –∫–æ—Ñ–µ"
‚Ä¢ "–ü–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 50000"
‚Ä¢ "+5000 —Ñ—Ä–∏–ª–∞–Ω—Å"

üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/process - –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ Google —Ç–∞–±–ª–∏—Ü—É
/clear - –û—á–∏—Å—Ç–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
/table - –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ Google —Ç–∞–±–ª–∏—Ü—É
/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
/help - –ü–æ–º–æ—â—å

–í—Å–µ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å—Å—è, –∞ –∫–æ–≥–¥–∞ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å /process, —è –æ–±—Ä–∞–±–æ—Ç–∞—é –∏—Ö —á–µ—Ä–µ–∑ AI, –æ–ø—Ä–µ–¥–µ–ª—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –¥–æ–±–∞–≤–ª—é –≤ —Ç–∞–±–ª–∏—Ü—É.
"""
    await update.message.reply_text(welcome_message)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
ü§ñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–π —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç—Ä–∞—Ç–∞—Ö –∏ –¥–æ—Ö–æ–¥–∞—Ö –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ
2Ô∏è‚É£ –ö–æ–≥–¥–∞ –Ω–∞–∫–æ–ø–∏—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π /process
3Ô∏è‚É£ –ë–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Ö –∏ –¥–æ–±–∞–≤–∏—Ç –≤ Google —Ç–∞–±–ª–∏—Ü—É

üí° –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:
‚Ä¢ "500 —Ä—É–±–ª–µ–π –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
‚Ä¢ "–ö—É–ø–∏–ª –∫–æ—Ñ–µ 200—Ä"
‚Ä¢ "–ü–æ—Ç—Ä–∞—Ç–∏–ª 1000 –Ω–∞ —Ç–∞–∫—Å–∏"
‚Ä¢ "–ó–∞—Ä–ø–ª–∞—Ç–∞ 60000"
‚Ä¢ "+3000 —Ñ—Ä–∏–ª–∞–Ω—Å"

üìã –ö–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/process - –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
/clear - –û—á–∏—Å—Ç–∏—Ç—å –±—É—Ñ–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
/table - –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
/help - –≠—Ç–∞ –ø–æ–º–æ—â—å

‚ùì –í–æ–ø—Ä–æ—Å—ã? –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã, –±–æ—Ç —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è!
"""
    await update.message.reply_text(help_text)


async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    
    if 'messages' not in context.user_data:
        context.user_data['messages'] = []
    
    messages_count = len(context.user_data['messages'])
    
    if messages_count == 0:
        await update.message.reply_text("üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
    else:
        stats_text = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
        stats_text += f"–ù–∞–∫–æ–ø–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_count}\n\n"
        stats_text += "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n"
        
        for i, msg in enumerate(context.user_data['messages'][-5:], 1):
            stats_text += f"{i}. {msg['text'][:50]}...\n"
        
        stats_text += f"\nüí° –ò—Å–ø–æ–ª—å–∑—É–π /process —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏—Ö"
    
    await update.message.reply_text(stats_text)


async def clear_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—á–∏—â–∞–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if 'messages' in context.user_data:
        count = len(context.user_data['messages'])
        context.user_data['messages'] = []
        await update.message.reply_text(f"üóë –û—á–∏—â–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
    else:
        await update.message.reply_text("üì≠ –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")


async def table_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ Google —Ç–∞–±–ª–∏—Ü—É"""
    if sheets_manager and sheets_manager.spreadsheet:
        url = sheets_manager.get_spreadsheet_url()
        await update.message.reply_text(f"üìä –¢–≤–æ—è —Ç–∞–±–ª–∏—Ü–∞:\n{url}")
    else:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É")


async def process_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /process - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    user = update.effective_user
    
    if 'messages' not in context.user_data or len(context.user_data['messages']) == 0:
        await update.message.reply_text("üì≠ –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ç—Ä–∞—Ç–∞—Ö!")
        return
    
    messages = context.user_data['messages']
    await update.message.reply_text(f"‚öôÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π...\n\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")
    
    try:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        transactions = []
        
        for msg_data in messages:
            text = msg_data['text']
            timestamp = msg_data['timestamp']
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º OpenAI –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
            parsed = categorizer.parse_transaction(text)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            transaction = {
                'date': timestamp.strftime('%Y-%m-%d'),
                'time': timestamp.strftime('%H:%M:%S'),
                'type': parsed['type'],
                'amount': parsed['amount'],
                'category': parsed['category'],
                'description': parsed['description'],
                'username': user.first_name or user.username or 'Unknown',
                'user_id': str(user.id)
            }
            
            transactions.append(transaction)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ Google Sheets
        if sheets_manager.add_transactions_batch(transactions):
            # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
            context.user_data['messages'] = []
            
            success_message = f"""
‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π!

üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É: /table
"""
            await update.message.reply_text(success_message)
        else:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        await update.message.reply_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç –∏—Ö –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    user = update.effective_user
    text = update.message.text
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if 'messages' not in context.user_data:
        context.user_data['messages'] = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä
    context.user_data['messages'].append({
        'text': text,
        'timestamp': datetime.now()
    })
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    count = len(context.user_data['messages'])
    await update.message.reply_text(
        f"‚úÖ –ó–∞–ø–∏—Å–∞–ª! –í—Å–µ–≥–æ –Ω–∞–∫–æ–ø–ª–µ–Ω–æ: {count} —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π /process —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    )


async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error {context.error}")


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global sheets_manager, categorizer
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_errors = config.validate_config()
    if config_errors:
        logger.error("–û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for error in config_errors:
            logger.error(f"  - {error}")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets
    logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets...")
    sheets_manager = GoogleSheetsManager(
        config.GOOGLE_CREDENTIALS_FILE,
        config.SPREADSHEET_NAME
    )
    
    if not sheets_manager.connect():
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets")
        return
    
    logger.info(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Ç–∞–±–ª–∏—Ü–µ: {sheets_manager.get_spreadsheet_url()}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI categorizer
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI...")
    categorizer = TransactionCategorizer(config.OPENAI_API_KEY)
    logger.info("‚úÖ OpenAI –≥–æ—Ç–æ–≤")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(config.TELEGRAM_BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("process", process_command))
    application.add_handler(CommandHandler("clear", clear_command))
    application.add_handler(CommandHandler("table", table_command))
    application.add_handler(CommandHandler("stats", stats_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()

